<project default="jar:jar" xmlns:j="jelly:core" xmlns:test="test">

  <preGoal name="site">
    <attainGoal name="java:compile"/>
    <attainGoal name="clover"/>
  </preGoal>

  <goal name="doc">
    <attainGoal name="html2xdoc"/>
    <attainGoal name="xdoc"/>
  </goal>

  <goal name="sar">
    <attainGoal name="jar"/>
    <mkdir dir="${maven.build.dir}/sar-assembly/"/>

    <copy file="${maven.build.dir}/${maven.final.name}.jar"
        tofile="${maven.build.dir}/sar-assembly/${maven.final.name}.jar"/>

    <copy todir="${maven.build.dir}/sar-assembly/">
      <fileset dir="src/sar/"/>
    </copy>

    <jar destfile="${maven.build.dir}/${maven.final.name}.sar"
         basedir="${maven.build.dir}/sar-assembly/"/>

  </goal>

  <goal name="setclasspath" prereqs="java:compile, test:compile">
		<path id="test.classpath">
	    <pathelement path="${maven.build.dest}"/>
	    <pathelement path="target/classes"/>
	    <pathelement path="target/test-classes"/>
	    <path refid="maven.dependency.classpath"/>
		</path>
  </goal>

  <goal name="sysunit:a" prereqs="setclasspath" description="Runs system test A on a bunch of slave nodes">
    <java classname="org.sysunit.transport.jms.MasterNode" fork="yes">
      <classpath refid="test.classpath"/>
      <arg value="org/sysunit/jelly/sampleSystemTest.jelly"/>
    </java>
  </goal>
 
  <goal name="sysunit:slave" prereqs="setclasspath" description="Runs a slave node">
    <java classname="org.sysunit.transport.jms.SlaveNode" fork="yes">
      <classpath refid="test.classpath"/>
    </java>
  </goal>

  <goal name="sysunit:generate-test-list" prereqs="test:test-resources">
    <test:dependency-handle/>
    <j:set var="testPlugin" value="${pom.getPluginContext('maven-test-plugin')}"/>
    <j:set var="testDir">${testPlugin.findVariable('maven.test.dest')}</j:set>
    <j:set var="testDirLen" value="${size(testDir)}"/>
    <fileScanner var="xmlTests">
      <fileset dir="${testDir}">
        <patternset>
          <include name="**/*.systest"/>
        </patternset>
      </fileset>
    </fileScanner>

    <j:file name="${testDir}/sysunit-tests.properties" omitXmlDeclaration="true">
        <j:forEach var="xmlTest" items="${xmlTests.iterator()}">
            ${xmlTest.getPath().toString().substring(testDirLen)} = on
        </j:forEach>
    </j:file>

  </goal>

  <goal name="sysunit:test">
    <test:dependency-handle/>
    <j:set var="testPlugin" value="${pom.getPluginContext('maven-test-plugin')}"/>
    ${testPlugin.setVariable('testcase', 'org.sysunit.SumoSystemTestSuite')}
    <attainGoal name="test:single"/>
  </goal>

  <goal name="sysunit:register">
    <test:dependency-handle/>
    <postGoal name="test:test">
       <attainGoal name="sysunit:test"/>
    </postGoal>
  </goal>
 
</project>

